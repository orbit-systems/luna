
define OUT_PORT, 10

li ra, -3.0h

loc 0

__entry__:
IVT:
    bra start

loc 2048
align 4
start:
    ; fill interrupt handlers
    ; for (int i = 0; i < 2048; i+=8) {
    ;     sw i, interrupt_handler;
    ; }

    li ra, IVT
    li rb, interrupt_handler
    .fill_IVT:
        sw  ra, rb
        add ra, ra, 8
        cmp ra, 2048
        blt .fill_IVT
    ; IVT filled

    ; set up stack
    li   fp, stack
    li   sp, stack
    li   ra, 1234
    push ra
    li   ra, 0
    pop  ra

    li   ra, hello_world_text
    call rb, print_cstring

    .spin:
        bra .spin


setup_failed:
    li   ra, setup_failed_text
    call rb, print_cstring
    .spin:
        bra .spin

interrupt_handler:

    li   ra, interrupt_handler_text
    call rb, print_cstring

    .spin:
        bra .spin

print_cstring: ; (charptr: ra) -> (ra)
    push rb
    .loop:
        lb  rb, ra
        cmp rb, 0
        beq .end
        out OUT_PORT, rb
        add ra, ra, 1
        bra .loop
    pop  rb
    .end:
    ret

    

interrupt_handler_text:
    utf8 "[interrupt]\n\0"
setup_failed_text:
    utf8 "setup failed\n\0"
hello_world_text:
    utf8 "Hello world!\n\0"

loc 0x1FFFF
stack:
/*
bindings (visiblity):
    local       default; visible within object
    global      visible to other object files
    weak        visible to other object files but can be overridden by a global symbol with the same name

relocs:
    location    default for labels; symbol value is changed based on its relative position within a section
    absolute    default for .symbol delcarations; symbol value does not change during relocation. a label cannot have absolute binding.
*/

define a_random_symbol -123     // create and set symbol "a_random_symbol" to 300
bind a_random_symbol "global"   // make the symbol visible to other object code files

type this_random_function_code "function"
type this_random_function "data"

section "code" {
    this_random_function_code:
        li      ra, some_data   // load ra with value of some_data (address)
        lw      rb, [ra]        // load rb with value AT ra
        add     rb, rb, 10      // increment by 10
        sw      [ra], rb        // store it back
        ret
}

// this section has read (r), write (w), and execute (x) permissions.
section "data" "rwx" {
    .bind some_data "global"
    // inline directives must be prefixed with . to distinguish from instructions
    some_data:
        u64     0xCAFE_F00D
}

section "rodata" {
    this_random_function_pointer:
        u64     this_random_function_code
    a_string:
        utf8    "bruh"
}

// a blank type section won't actually take up any space in the object file and will be zeroed.
// blank has the same default perms as regular sections with "data" as their name
blank "bss" {
    some_big_struct: 
        u8      0, 60       // make 60 bytes of zero
        u32     23201       // error - non-zero values are not allowed in blank sections
        u64     a_string    // error - symbol references are not allowed in blank sections
}

info {
    "arbitrary" = "pairs",
    "of keys"   = "and values",

    "compiler"  = "none",
}

